{"version":3,"sources":["index.js"],"names":["TodoItem","props","className","type","id","index","checked","check","onClick","handleClick","task","TodoList","list","Object","values","reduce","obj","items","dateHead","push","Array","map","item","todo","status","text","key","AddItem","onSubmit","handleSubmit","value","onChange","handleChange","disabled","displayCalendar","AddTaskButton","showForm","Header","MyCalendar","date","onClickDay","Signature","href","TodoApp","setState","state","todoList","dateCreation","Date","newItemText","showCalendar","today","taskDate","toggleCheck","bind","addItem","renderForm","this","dateTittle","prevProps","prevState","itemIndex","assign","diferenceInDays","formatDistance","addSuffix","event","target","preventDefault","newItem","length","console","log","React","Component","root","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.931e98c9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport './style.scss';\nimport 'react-calendar/dist/Calendar.css';\nimport formatDistance from 'date-fns/formatDistance';\nimport diferenceInDays from 'date-fns/differenceInDays';\nimport { AiFillGithub } from 'react-icons/ai';\n\n\nfunction TodoItem(props) {\n    return (\n        <div className='todoItem'>\n            <input type='radio' className='todoBox' id={props.index} checked={props.check} onClick={props.handleClick} />\n            <label className='todoTask'>{props.task}</label>\n        </div>\n    )\n}\n\nfunction TodoList(props) {\n    const list = props.list;\n    const TodoItems = Object.values(list.reduce((obj, items) => {\n        if (!(items.dateHead in obj)) {\n            obj[items.dateHead] = new Array(items);\n        }\n        else { obj[items.dateHead].push(items) }\n        return obj;\n    }, {})).map(item => <div className='perDay'>\n        <h2>{item[0].dateHead}</h2>\n        {item.map(todo => < TodoItem check={todo.status} task={todo.text} index={todo.key} handleClick={props.handleClick} />)}\n    </div>)\n\n    return (\n        TodoItems\n    );\n}\n\nfunction AddItem(props) {\n    return (\n        <div className='addForm'>\n            <form onSubmit={props.handleSubmit}>\n                <input type=\"text\" value={props.value} onChange={props.handleChange}></input>\n                < div className='buttons'>\n                    <button type=\"submit\" disabled={props.disabled}>Add</button>\n                    <button type='button' onClick={props.displayCalendar}>Today</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nfunction AddTaskButton(props) {\n    return (\n        <button type='button' onClick={props.showForm}>Add Task</button>\n    )\n}\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <h1>Todo List</h1>\n        </div>\n    )\n}\n\n\n\nfunction MyCalendar(props) {\n    return (\n        <div className='calendar'>\n            <Calendar\n                value={props.date}\n                onClickDay={props.onClickDay}\n            />\n        </div>\n    );\n}\n\nfunction Signature() {\n    return (\n        <div className='signature'>By Rodrigo <a href='https://github.com/Rodrigo-20'><AiFillGithub /></a></div>\n    )\n}\n\nclass TodoApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoList: [\n                {\n                    text: \"take gabo out for a walk\",\n                    key: 1,\n                    status: false,\n                    dateCreation: new Date(),\n                    dateHead: '',\n                },\n                {\n                    text: \"clean the floor\",\n                    key: 2,\n                    status: false,\n                    dateCreation: new Date(),\n                    dateHead: '',\n\n                }\n            ],\n            newItemText: '',\n            showForm: false,\n            showCalendar: false,\n            today: new Date(),\n            date: new Date(),\n            taskDate: '',\n\n        }\n        this.toggleCheck = this.toggleCheck.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n        /*this.onChange = this.onChange.bind(this);*/\n        this.onClickDay = this.onClickDay.bind(this);\n        this.displayCalendar = this.displayCalendar.bind(this);\n\n    }\n    componentDidMount() {\n        this.dateTittle();\n    }\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    dateTittle() {\n        this.setState(state => ({\n            todoList: state.todoList.map((item, itemIndex) => {\n                return Object.assign(item, { dateHead: diferenceInDays(item.dateCreation, state.today) === 0 ? 'Today' : formatDistance(item.dateCreation, state.today, { addSuffix: true }), });\n\n            })\n\n        }));\n    }\n\n    toggleCheck(event) {\n        const index = event.target.id - 1;\n        this.setState(state => ({\n            todoList: state.todoList.map((item, itemIndex) => {\n                return itemIndex == index ? Object.assign(item, { status: !item.status }) : item;\n\n            })\n\n        }));\n\n    }\n\n    addItem(event) {\n        event.preventDefault();\n        const newItem = {};\n        newItem.text = this.state.newItemText;\n        newItem.key = this.state.todoList.length + 1;\n        newItem.status = false;\n        newItem.dateCreation = this.state.date;\n        this.setState(state => ({\n            todoList: [...state.todoList, newItem],\n            newItemText: '',\n            showForm: false,\n            showCalendar: false,\n            date: new Date(),\n        }));\n        this.dateTittle();\n        console.log(this.state.todoList);\n    }\n\n    handleChange(event) {\n        this.setState({\n            newItemText: event.target.value\n        })\n    }\n\n    renderForm() {\n        this.setState({\n            showForm: true\n        })\n    }\n\n    displayCalendar() {\n        this.setState({\n            showCalendar: true\n        })\n    }\n\n    /*onChange = date => {\n        this.setState({ date });\n        console.log(this.state.date);\n\n    }*/\n\n    onClickDay = value => {\n        this.setState({ date: value });\n\n    }\n\n    render() {\n        const addItem = <AddItem handleSubmit={this.addItem} value={this.state.newItemText} handleChange={this.handleChange}\n            disabled={!this.state.newItemText} displayCalendar={this.displayCalendar} />\n        return (\n            <div id='todoApp' >\n                <Header />\n                <div className='todoList'>\n                    <TodoList list={this.state.todoList} handleClick={this.toggleCheck} date={this.state.today} />\n                    {this.state.showForm ? addItem : <AddTaskButton showForm={this.renderForm} />}\n                </div>\n                { this.state.showCalendar ?\n                    <MyCalendar date={this.state.date} onClickDay={this.onClickDay} /> : null}\n                <Signature />\n            </div>\n        )\n    }\n\n}\n\n\nconst root = document.querySelector('#root');\nReactDOM.render(<TodoApp />, root);\n\n"],"sourceRoot":""}